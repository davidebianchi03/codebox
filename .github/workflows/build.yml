name: Build

on:
  push:
    tags:
      - '*.*.*.*'

env:
  CGO_ENABLED: 0

jobs:
  build_server:
    runs-on: ubuntu-latest
    container: golang:1.23.1
    steps:
      - uses: actions/checkout@v4

      - name: 'Build backend'
        env:
          GOOS: linux
          GOARCH: amd64
        run: go build -o bin/codebox main.go

      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: codebox-backend
          path: bin/codebox

  build_frontend:
    runs-on: ubuntu-latest
    container: node:20.12.2
    steps:
      - uses: actions/checkout@v4
      
      - name: 'Build frontend'
        env:
          CI: false
        run: |
          cd app
          npm i
          npm run build

      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: codebox-frontend
          path: app/build/

  build_docker_image:
    runs-on: ubuntu-latest
    needs:
      - build_server
      - build_frontend

    steps:
      - uses: actions/checkout@v4

      - name: Download codebox backend
        uses: actions/download-artifact@v4
        with:
          name: codebox-backend
          path: bin/codebox

      - name: Download codebox frontend
        uses: actions/download-artifact@v4
        with:
          name: codebox-frontend
          path: app/build/

      # - name: Download all workflow run artifacts
      #   uses: actions/download-artifact@v4

      # - name: Fix artifacts paths
      #   run: |
      #     mkdir -p bin
      #     cp ./codebox-backend ./bin/codebox
      #     unzip ./codebox-frontend.zip -d ./app/build

      - name: Download agent binaries and cli binaries
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          ls
          cd bin
          source ../docker/download-agent.sh
          source ../docker/download-cli.sh
          cd ..
     
      - name: Docker metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: dadebia/codebox

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
