stages:
  - build_server
  - build_frontend
  - docker

build_server:
  stage: build_server
  image: golang:1.24.1
  tags:
    - docker-linux
  variables:
    GOOS: linux
    GOARCH: amd64
  script:
    - mkdir -p bin
    - go build -o bin/codebox main.go
  artifacts:
    paths:
      - bin/codebox
    expire_in: 1 hour
  only:
    tags:
      - /^v\d+\.\d+\.\d+$/

build_frontend:
  stage: build_frontend
  image: node:20.12.2
  script:
    - cd app
    - sed -i -e "s/{{ replace_me }}/$CI_COMMIT_TAG/g" .env.production
    - npm install
    - npm run build
  artifacts:
    paths:
      - app/build/
    expire_in: 1 hour
  only:
    tags:
      - /^v\d+\.\d+\.\d+$/

build_docker_image:
  stage: docker
  image: docker:20.10.24
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache curl bash git
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_TOKEN"
  script:
    - mkdir -p bin
    - mv bin/codebox ./bin/codebox-dir
    - mv ./bin/codebox-dir/codebox ./bin/codebox
    - rm -rf ./bin/codebox-dir
    - bash docker/download-cli.sh

    # Docker build & push
    - export IMAGE_NAME=dadebia/codebox
    - export IMAGE_TAG=$CI_COMMIT_TAG
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  only:
    tags:
      - /^v\d+\.\d+\.\d+$/
  dependencies:
    - build_server
    - build_frontend
